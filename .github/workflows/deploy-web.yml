name: deploy-web

on:
  workflow_call:
    inputs:
      deploy_message:
        description: 'Deployment commit message'
        type: string
        required: false
        default: 'Deploy web'

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - name: Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web
        path: web/public

    - name: Copy latest PDF to pragmastat.pdf
      run: |
        cd web/public
        latest_pdf=$(ls -t pragmastat-v*.pdf 2>/dev/null | head -n 1)
        if [ -n "$latest_pdf" ]; then
          cp "$latest_pdf" pragmastat.pdf
          echo "Copied $latest_pdf to pragmastat.pdf"
        else
          echo "No versioned PDF found"
        fi

    - name: Deploy to pragmastat-dev
      run: |
        # Save new web content to temp location
        cp -r web/public /tmp/web-new

        # Configure git
        git config user.name "Andrey Akinshin"
        git config user.email "andrey.akinshin@gmail.com"

        # Fetch and checkout target branch
        git fetch origin pragmastat-dev 2>/dev/null || true
        git checkout pragmastat-dev 2>/dev/null || (git checkout --orphan pragmastat-dev && git rm -rf . 2>/dev/null || true)

        # Delete all non-PDF files (excluding .git directory)
        find . -type f ! -name '*.pdf' ! -path './.git/*' -delete

        # Delete empty directories (excluding .git)
        find . -type d -empty ! -path './.git/*' -delete

        # Copy new web content (overwrites on name collision)
        cp -r /tmp/web-new/* .
        touch .nojekyll

        # Commit and push
        git add -A
        git diff --staged --quiet || git commit -m "${{ inputs.deploy_message }}"
        git push origin pragmastat-dev
