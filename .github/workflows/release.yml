name: release
run-name: "[release] ${{ github.ref_name }}"

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write # required for deploy-web

jobs:
  build-img:
    uses: ./.github/workflows/build-img.yml

  build-pdf:
    needs: build-img
    uses: ./.github/workflows/build-pdf.yml
    with:
      release: true

  build-web:
    needs: [build-img, build-pdf]
    uses: ./.github/workflows/build-web.yml
    with:
      release: true

  build-python:
    uses: ./.github/workflows/build-python.yml

  build-dotnet:
    uses: ./.github/workflows/build-dotnet.yml

  build-ts:
    uses: ./.github/workflows/build-ts.yml

  build-rust:
    uses: ./.github/workflows/build-rust.yml

  build-kotlin:
    uses: ./.github/workflows/build-kotlin.yml

  publish-github:
    runs-on: ubuntu-24.04
    needs: [build-web, build-python, build-dotnet, build-ts, build-rust, build-kotlin]
    steps:
    - name: Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web
        path: artifacts/web

    - name: Download pdf artifacts
      uses: actions/download-artifact@v4
      with:
        name: pdf
        path: artifacts/pdf

    - name: Download dotnet artifacts
      uses: actions/download-artifact@v4
      with:
        name: dotnet
        path: artifacts/dotnet

    - name: Download python artifacts
      uses: actions/download-artifact@v4
      with:
        name: python
        path: artifacts/python

    - name: Download rust artifacts
      uses: actions/download-artifact@v4
      with:
        name: rust
        path: artifacts/rust

    - name: Download kotlin artifacts
      uses: actions/download-artifact@v4
      with:
        name: kotlin
        path: artifacts/kotlin

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ github.ref_name }}
        discussion_category_name: Releases
        generate_release_notes: true
        files: |
          artifacts/pdf/*.pdf
          artifacts/dotnet/*.nupkg
          artifacts/dotnet/*.snupkg
          artifacts/python/*.tar.gz
          artifacts/python/*.whl
          artifacts/rust/*.crate
          artifacts/kotlin/*.jar

  publish-web:
    needs: [build-web, build-python, build-dotnet, build-ts, build-rust, build-kotlin]
    uses: ./.github/workflows/deploy-web.yml
    with:
      deploy_message: "Deploy: ${{ github.ref_name }}"

  publish-dotnet:
    runs-on: ubuntu-24.04
    needs: [build-web, build-python, build-dotnet, build-ts, build-rust, build-kotlin]
    steps:
    - uses: actions/checkout@v4

    - name: Install .NET
      run: ./build/scripts/dotnet-install.sh

    - name: Download dotnet artifacts
      uses: actions/download-artifact@v4
      with:
        name: dotnet
        path: dotnet/artifacts

    - name: Publish to NuGet
      run: ./.dotnet/dotnet nuget push ./dotnet/artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

  publish-python:
    runs-on: ubuntu-24.04
    needs: [build-web, build-python, build-dotnet, build-ts, build-rust, build-kotlin]
    permissions:
      id-token: write  # Required for trusted publishing to PyPI
    steps:
    - name: Download python artifacts
      uses: actions/download-artifact@v4
      with:
        name: python
        path: dist/

    - name: Remove platform-specific wheels
      run: rm -f dist/*.whl

    - name: Publish to PyPI (source distribution only)
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-npm:
    runs-on: ubuntu-24.04
    needs: [build-web, build-python, build-dotnet, build-ts, build-rust, build-kotlin]
    permissions:
      id-token: write  # Required for npm provenance
      contents: read
    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'

    - name: Download ts artifacts
      uses: actions/download-artifact@v4
      with:
        name: ts
        path: ts/

    - name: Publish to npm
      run: npm publish *.tgz --access public --provenance
      working-directory: ts
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-rust:
    runs-on: ubuntu-24.04
    needs: [build-web, build-python, build-dotnet, build-ts, build-rust, build-kotlin]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Download rust artifacts
      uses: actions/download-artifact@v4
      with:
        name: rust
        path: rust/pragmastat/target/package

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
      working-directory: rust/pragmastat

  publish-kotlin:
    runs-on: ubuntu-24.04
    needs: [build-web, build-python, build-dotnet, build-ts, build-rust, build-kotlin]
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Publish to Sonatype Central
      run: ./gradlew --no-daemon publishToSonatype closeAndReleaseSonatypeStagingRepository
      working-directory: kotlin
      env:
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
        GRADLE_SIGNING_KEY: ${{ secrets.GRADLE_SIGNING_KEY }}
        GRADLE_SIGNING_PASSWORD: ${{ secrets.GRADLE_SIGNING_PASSWORD }}
